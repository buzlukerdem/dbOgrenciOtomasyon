<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>